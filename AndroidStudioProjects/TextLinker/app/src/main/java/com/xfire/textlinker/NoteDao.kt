package com.xfire.textlinker

import androidx.lifecycle.LiveData
import androidx.room.Dao
import androidx.room.Delete
import androidx.room.Insert
import androidx.room.Query
import androidx.room.Update

@Dao
interface NoteDao {
    @Query("SELECT * FROM notes ORDER BY id DESC")
    fun getAllNotes(): LiveData<List<NoteEntity>>

    // Local-only notes (exclude those received from server). No tombstones in schema.
    @Query("""
        SELECT * FROM notes 
        WHERE from_server = 0 
        AND (from_server IS NULL OR from_server = 0)
        ORDER BY id DESC
    """)
    suspend fun getLocalNotes(): List<NoteEntity> {
        // This is a suspend function, so we can't directly log here
        // The actual implementation is generated by Room
        // We'll add logging in the ViewModel instead
        return emptyList() // This will be overridden by Room
    }

    @Insert(onConflict = androidx.room.OnConflictStrategy.REPLACE)
    suspend fun insertNote(note: NoteEntity)

    @Delete
    suspend fun deleteNote(note: NoteEntity)

    @Update
    suspend fun updateNote(note: NoteEntity)
}
